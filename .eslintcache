[{"C:\\Users\\Student-PC\\redux-app-with-toolkit\\src\\index.js":"1","C:\\Users\\Student-PC\\redux-app-with-toolkit\\src\\serviceWorker.js":"2","C:\\Users\\Student-PC\\redux-app-with-toolkit\\src\\App.js":"3","C:\\Users\\Student-PC\\redux-app-with-toolkit\\src\\AddTodo.js":"4","C:\\Users\\Student-PC\\redux-app-with-toolkit\\src\\store\\store.js":"5","C:\\Users\\Student-PC\\redux-app-with-toolkit\\src\\store\\todoSlice.js":"6","C:\\Users\\Student-PC\\redux-app-with-toolkit\\src\\Viewtodo.js":"7"},{"size":522,"mtime":1609306999484,"results":"8","hashOfConfig":"9"},{"size":5141,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":330,"mtime":1609307009596,"results":"11","hashOfConfig":"9"},{"size":1087,"mtime":1609312669033,"results":"12","hashOfConfig":"9"},{"size":172,"mtime":1609307012583,"results":"13","hashOfConfig":"9"},{"size":1744,"mtime":1609312654635,"results":"14","hashOfConfig":"9"},{"size":1082,"mtime":1609312698935,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"v4qovm",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"C:\\Users\\Student-PC\\redux-app-with-toolkit\\src\\index.js",[],["35","36"],"C:\\Users\\Student-PC\\redux-app-with-toolkit\\src\\serviceWorker.js",[],"C:\\Users\\Student-PC\\redux-app-with-toolkit\\src\\App.js",["37"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport AddTodo from './AddTodo';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <div className=\"App\">\r\n      <AddTodo/>\r\n    </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Student-PC\\redux-app-with-toolkit\\src\\AddTodo.js",["38","39","40","41"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Viewtodo from './Viewtodo'\r\nimport { addtodo, fetchPost } from './store/todoSlice'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nfunction AddTodo() {\r\n    const dispatch = useDispatch()\r\n    const [task, settask] = useState({})\r\n    const [title, settitle] = useState()\r\n    const handleChange = (e) => {\r\n        settitle(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // settask({\r\n        //     title: title,\r\n        //     id: uuidv4()\r\n        // })\r\n        dispatch(addtodo(title))\r\n        console.log(e.target[0].value)\r\n        e.target[0].value=''\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type='text' name='title' onChange={handleChange} />\r\n                <button type='submit'>Add</button>\r\n            </form>\r\n            <button onClick={()=>dispatch(fetchPost())}>Post</button>\r\n            <Viewtodo />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTodo\r\n","C:\\Users\\Student-PC\\redux-app-with-toolkit\\src\\store\\store.js",[],"C:\\Users\\Student-PC\\redux-app-with-toolkit\\src\\store\\todoSlice.js",["42"],"import {createSlice, createAsyncThunk} from '@reduxjs/toolkit'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nexport const fetchPost = createAsyncThunk(\r\n    'fetchposts',\r\n    async (data, thunkAPI)=>{\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/posts')\r\n        return response.json()\r\n    }\r\n);\r\n\r\nconst todoSlice = createSlice({\r\n    name: 'todo',\r\n    initialState: {\r\n        todos: [{title:'buy milk', id:1}],\r\n        posts: []\r\n    }\r\n   ,\r\n    reducers: {\r\n        addtodo: {\r\n        reducer(state, action){\r\n            console.log(action.payload)\r\n            let newObj = action.payload\r\n            // let {id, title} = newObj\r\n             state.todos =  [...state.todos, newObj]\r\n            return state\r\n\r\n        },\r\n        prepare(title){\r\n            return { payload:{title:title, id:uuidv4()}}\r\n        }\r\n    },\r\n    deletetodo: {\r\n        reducer(state, action){\r\n            console.log(action.payload.id)\r\n             state.todos = state.todos.filter(item=>item.id!=action.payload.id)\r\n            return state\r\n\r\n        },\r\n        prepare(id){\r\n            return {payload: {id}}\r\n        }\r\n    }\r\n\r\n        // deletetodo(state,action){\r\n        //     console.log(action.payload)\r\n        //     let newState1 = state.filter(\r\n        //         (item)=> item.id !== action.payload\r\n        //     )\r\n        //     return newState1\r\n        // }\r\n    },\r\n    extraReducers: {\r\n        [fetchPost.fulfilled] : (state, action) =>{\r\n            console.log(action.payload.slice(0,10))\r\n             state.posts=action.payload.slice(0,10)\r\n        }\r\n    }\r\n})\r\nexport const { addtodo, deletetodo } = todoSlice.actions;\r\nconst todoReducer = todoSlice.reducer;\r\nexport default todoReducer","C:\\Users\\Student-PC\\redux-app-with-toolkit\\src\\Viewtodo.js",["43","44"],"import React,{useState} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {useDispatch} from 'react-redux'\r\nimport {deletetodo} from './store/todoSlice'\r\n\r\nfunction Viewtodo() {\r\n    const [title, settitle] = useState('')\r\n    const dispatch = useDispatch()\r\n    const state = useSelector(state => state.todos )\r\n    const posts = useSelector(state => state.posts )\r\n    const handleDelete = (id)=>{\r\n         dispatch(deletetodo(id))\r\n    }\r\n    return (\r\n        <>\r\n        <div className='todos'\r\n        >\r\n            {\r\n                state.map((item)=>(\r\n                    <div key={item.id}>\r\n                        {item.title}\r\n                    <button onClick={()=>handleDelete(item.id)}>X</button>\r\n                     </div>\r\n                ))\r\n                //sdadas\r\n            }\r\n        </div>\r\n        <div className='posts'>\r\n            {\r\n                posts.map((post)=>(\r\n                    <div key={post.id}>{post.title}</div>\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Viewtodo\r\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":12},{"ruleId":"49","severity":1,"message":"53","line":2,"column":23,"nodeType":"51","messageId":"52","endLine":2,"endColumn":34},{"ruleId":"49","severity":1,"message":"54","line":5,"column":16,"nodeType":"51","messageId":"52","endLine":5,"endColumn":22},{"ruleId":"49","severity":1,"message":"55","line":8,"column":12,"nodeType":"51","messageId":"52","endLine":8,"endColumn":16},{"ruleId":"49","severity":1,"message":"56","line":8,"column":18,"nodeType":"51","messageId":"52","endLine":8,"endColumn":25},{"ruleId":"57","severity":1,"message":"58","line":36,"column":60,"nodeType":"59","messageId":"60","endLine":36,"endColumn":62},{"ruleId":"49","severity":1,"message":"61","line":7,"column":12,"nodeType":"51","messageId":"52","endLine":7,"endColumn":17},{"ruleId":"49","severity":1,"message":"62","line":7,"column":19,"nodeType":"51","messageId":"52","endLine":7,"endColumn":27},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'uuidv4' is defined but never used.","'task' is assigned a value but never used.","'settask' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'title' is assigned a value but never used.","'settitle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]